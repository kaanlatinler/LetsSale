// <auto-generated />
using System;
using LetsSale.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LetsSale.Migrations
{
    [DbContext(typeof(CarSaleDBContext))]
    partial class CarSaleDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LetsSale.Models.Entities.Notifies", b =>
            {
                b.Property<int>("NotifyID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotifyID"));

                b.Property<Guid>("CarID")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("UserID")
                    .HasColumnType("uniqueidentifier");

                b.Property<bool>("NotifyType")
                    .HasColumnType("bit");

                b.HasKey("NotifyID");

                b.ToTable("Notify");
            });

            modelBuilder.Entity("LetsSale.Models.Entities.User_Cars", b =>
            {
                b.Property<int>("CarID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarID"));

                b.Property<Guid>("CMainID")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("CarBrand")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("CarName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("CarPlateNumber")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("CarYear")
                    .HasColumnType("int");

                b.HasKey("CarID");

                b.ToTable("UserCars");
            });

            modelBuilder.Entity("LetsSale.Models.Entities.Car", b =>
                {
                    b.Property<int>("CarsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarsID"));

                    b.Property<Guid>("CMainID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CarBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarCargoVolume")
                        .HasColumnType("int");

                    b.Property<int>("CarCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CarColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarHP")
                        .HasColumnType("int");

                    b.Property<int>("CarMaxFuelTankCapacity")
                        .HasColumnType("int");

                    b.Property<int>("CarMaxSpeed")
                        .HasColumnType("int");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarMainPic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarPlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarPrice")
                        .HasColumnType("int");

                    b.Property<int>("CarTorque")
                        .HasColumnType("int");

                    b.Property<string>("CarTransmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarYear")
                        .HasColumnType("int");

                    b.Property<int>("CarPicsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CarsID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("LetsSale.Models.Entities.Saled_Cars", b =>
            {
                b.Property<int>("SaledCarsID")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaledCarsID"));

                b.Property<Guid>("SCMainID")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("SCarBrand")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("SCarCategoryID")
                    .HasColumnType("int");

                b.Property<int>("SCarMainPic")
                        .HasColumnType("nvarchar(max)");

                b.Property<string>("SCarName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("SCarPlateNumber")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("SCarPrice")
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("EmployeeID")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("SCarSaleDare")
                        .HasColumnType("datetime2");

                b.HasKey("SaledCarsID");

                b.ToTable("SaledCars");
            });

            modelBuilder.Entity("LetsSale.Models.Entities.CarCat", b =>
                {
                    b.Property<int>("CatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatID"));

                    b.Property<string>("CatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatID");

                    b.ToTable("CarCategories");
                });

            modelBuilder.Entity("LetsSale.Models.Entities.CarPics", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CarPicsPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarID")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.ToTable("Car_Pics");
                });

            modelBuilder.Entity("LetsSale.Models.Entities.ERank", b =>
                {
                    b.Property<int>("ERankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ERankID"));

                    b.Property<string>("ERankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ERankID");

                    b.ToTable("ERanks");
                });

            modelBuilder.Entity("LetsSale.Models.Entities.Employees", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("EEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ELastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EMainID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ERankID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaledCarsID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("LetsSale.Models.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<Guid>("UMainID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserCarsID")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserRegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
